#!/usr/bin/env bash

atreDir=/srv/atremis
svc="sudo -u service"
if [[ "$(id -un)" == "service" ]]; then
	svc=""
	isSvcUser="true"
fi

set -e

function atre::log {
	echo -e "\e[0;34m${FUNCNAME[1]}: $*\e[0m"
}

function atre::error {
	echo -e "\e[0;31matre: $*\e[0m" 1>&2
	exit 1
}

function atre::succ {
	echo -e "\e[0;32m$*\e[0m"
}

function atre::usage {
	cat 1>&2 <<XXX
usage: $0 <COMMAND>

COMMAND:
    help                        Print usage
    pull                        Pull changes from repository
    apply                       Apply configuration
    assvc [COMMAND]             Run command as service user
XXX
}

function atre::pull {
	cd $atreDir

	atre::log "Pull updates"
	{
		set +e
		$svc git fetch --depth 1 origin
		$svc git reset --hard origin/main
		$svc git submodule sync --recursive
		$svc git submodule update --init --recursive --recommend-shallow
		$svc git -c gc.reflogExpire=1 -c gc.reflogExpireUnreachable=0 \
			-c gc.rerereResolved=0 -c gc.rerereUnresolved=0 \
			-c gc.pruneExpire=now gc --quiet
	}

	atre::log "Current HEADs:"
	git show --oneline --no-patch --no-abbrev-commit HEAD
	git submodule -q foreach git show --oneline --no-patch --no-abbrev-commit HEAD

	atre::apply
}

function atre::apply {
	atre::log "Apply configuration"
	atre::runAsSvc make apply
}

function atre::runAsSvc {
	cd $atreDir
	if [[ "$isSvcUser" == "true" ]]; then
		DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u)/bus
		XDG_RUNTIME_DIR=/run/user/$(id -u)
		export DBUS_SESSION_BUS_ADDRESS XDG_RUNTIME_DIR
		exec "$@"
	else
		atre::log "Switch to service user"
		$svc atre runAsSvc "$@"
	fi
}

function atre::main {
	[ $# -eq 0 ] && atre::usage && exit
	[ ! -d "$atreDir" ] && atre::error "$atreDir does not exist"
	local cmd=$1
	shift

	case $cmd in
	help | --help)
		atre::usage "$@"
		exit
		;;
	pull)
		atre::pull "$@"
		;;
	apply)
		atre::apply "$@"
		;;
	assvc | runAsSvc)
		[ $# -eq 0 ] && atre::runAsSvc "$SHELL" && exit
		atre::runAsSvc "$@"
		;;
	*)
		atre::error "unknown option: $1"
		;;
	esac
}

atre::main "$@"
